import java.util.LinkedList;
import java.util.Scanner;
class DoublyLinkedList<T>{
	private LinkedList<T> list=new LinkedList<>();
	public void addfront(T element) {
		list.addFirst(element);
	}
	public void addlast(T element) {
		list.addLast(element);
	}
	public void insertatpos(int pos,T element) {
		list.add(pos, element);
	}
	public void delete(int index) {
		list.remove(index);
	}
	public void display(){
		for(T element:list) {
			System.out.print(element+" ");
		}
		System.out.println();
	}
	
}


public class DoublyLinkDemo {
public static void main(String[] args) {
       Scanner sc=new Scanner(System.in);
       DoublyLinkedList<Integer> doublylinkedlist=new DoublyLinkedList<>();
       int ch,element,index;
       boolean condition=true;
		while(condition) {
			System.out.println("Enter your choice:\n1.Insert an element at front\n2.Insertion At End\n3.Insertion At Any Position\n4.Delete\n5.Display\n6.Exit");
			ch=sc.nextInt();
			
			switch (ch) {
			
			case 1:
				System.out.println("Enter the element:");
				element=sc.nextInt();
				doublylinkedlist.addfront(element);
				break;
				
			case 2:
				System.out.println("Enter the element:");
				element=sc.nextInt();
				doublylinkedlist.addlast(element);
				break;
				
			case 3:
				System.out.println("Enter the element:");
				element=sc.nextInt();
				System.out.println("Enter the position:");
				index=sc.nextInt();
				doublylinkedlist.insertatpos(index,element);
				break;
			
			case 4:
				System.out.println("Enter the position:");
				index=sc.nextInt();
				doublylinkedlist.delete(index);
				break;
				
			case 5:
				System.out.println("The elements are:");
				doublylinkedlist.display();
				break;
				
			case 6:
				condition=false;
				
				break;
				
			default:
				System.out.println("Invalid Entry");
				break;
			
		}

	}
}}
